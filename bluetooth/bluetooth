#!/usr/bin/env python

import subprocess
import json
import re
import time

def get_device_info(device):
    info = subprocess.run(["bluetoothctl", "info", device], capture_output=True, text=True).stdout.replace("\t", "").split("\n")
    info_json = dict()
    for i in info:
        if("Name" in i):
            info_json["name"] = i.split(":")[1].lstrip().rstrip()
        elif("Icon:" in i):
            icon_type = i.split(":")[1].lstrip().rstrip()
            icon = "?"
            if(icon_type == "input-gaming"):
                icon = ""
            elif(icon_type == "audio-headset"):
                icon = "󰋎"
            info_json["icon"] = icon
        elif("Battery Percentage:" in i):
            battery = i.split("(")[1].replace(")", "").lstrip().rstrip()
            info_json["battery_level"] = f"{battery}%"
        elif("Connected:" in i):
            connected = i.split(":")[1].lstrip().rstrip()
            if(connected == "no"):
                return {}
    return info_json

def get_bluetooth_devices():
    devices = list(filter(None, subprocess.run(["bluetoothctl", "devices"], capture_output=True, text=True).stdout.split("\n")))
    device_macs = [x.split(" ")[1] for x in devices]
    devices_json = dict()
    for d in device_macs:
        info = get_device_info(d)
        if(info != {}):
            devices_json[d] = info
    return devices_json

try:
    while(True):
        try:
            print(json.dumps(get_bluetooth_devices()), flush=True)
        except json.decoder.JSONDecodeError:
            print("{}", flush=True)
        time.sleep(5)
except KeyboardInterrupt:
    pass
